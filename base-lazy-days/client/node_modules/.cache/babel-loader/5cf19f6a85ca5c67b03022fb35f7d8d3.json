{"ast":null,"code":"import { createStandaloneToast } from '@chakra-ui/react';\nimport { QueryClient } from '@tanstack/react-query';\nimport { theme } from '../theme';\nconst toast = createStandaloneToast({\n  theme\n});\nfunction queryErrorHandler(error) {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const title = error instanceof Error ? error.message : 'error connecting to server';\n\n  // prevent duplicate toasts\n  toast.closeAll();\n  toast({\n    title,\n    status: 'error',\n    variant: 'subtle',\n    isClosable: true\n  });\n}\nexport function generateQueryClient() {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        onError: queryErrorHandler\n      }\n    }\n  });\n}\n\n// to satisfy typescript until this file has uncommented contents\nexport const queryClient = new QueryClient();","map":{"version":3,"names":["createStandaloneToast","QueryClient","theme","toast","queryErrorHandler","error","title","Error","message","closeAll","status","variant","isClosable","generateQueryClient","defaultOptions","queries","onError","queryClient"],"sources":["/Users/lee/Desktop/study/React-Query/base-lazy-days/client/src/react-query/queryClient.ts"],"sourcesContent":["import { createStandaloneToast } from '@chakra-ui/react';\nimport { QueryClient, useQueryClient } from '@tanstack/react-query';\n\nimport { theme } from '../theme';\n\nconst toast = createStandaloneToast({ theme });\n\nfunction queryErrorHandler(error: unknown): void {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const title =\n    error instanceof Error ? error.message : 'error connecting to server';\n\n  // prevent duplicate toasts\n  toast.closeAll();\n  toast({ title, status: 'error', variant: 'subtle', isClosable: true });\n}\n\nexport function generateQueryClient():QueryClient{\n    return new QueryClient({\n        defaultOptions:{\n            queries:{\n                onError:queryErrorHandler,\n            }\n        }\n    })\n}\n\n// to satisfy typescript until this file has uncommented contents\nexport const queryClient = new QueryClient();\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAwB,uBAAuB;AAEnE,SAASC,KAAK,QAAQ,UAAU;AAEhC,MAAMC,KAAK,GAAGH,qBAAqB,CAAC;EAAEE;AAAM,CAAC,CAAC;AAE9C,SAASE,iBAAiBA,CAACC,KAAc,EAAQ;EAC/C;EACA,MAAMC,KAAK,GACTD,KAAK,YAAYE,KAAK,GAAGF,KAAK,CAACG,OAAO,GAAG,4BAA4B;;EAEvE;EACAL,KAAK,CAACM,QAAQ,CAAC,CAAC;EAChBN,KAAK,CAAC;IAAEG,KAAK;IAAEI,MAAM,EAAE,OAAO;IAAEC,OAAO,EAAE,QAAQ;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;AACxE;AAEA,OAAO,SAASC,mBAAmBA,CAAA,EAAc;EAC7C,OAAO,IAAIZ,WAAW,CAAC;IACnBa,cAAc,EAAC;MACXC,OAAO,EAAC;QACJC,OAAO,EAACZ;MACZ;IACJ;EACJ,CAAC,CAAC;AACN;;AAEA;AACA,OAAO,MAAMa,WAAW,GAAG,IAAIhB,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module"}