{"ast":null,"code":"import { DoubleIndexedKV } from './double-indexed-kv';\nvar Registry = /** @class */function () {\n  function Registry(generateIdentifier) {\n    this.generateIdentifier = generateIdentifier;\n    this.kv = new DoubleIndexedKV();\n  }\n  Registry.prototype.register = function (value, identifier) {\n    if (this.kv.getByValue(value)) {\n      return;\n    }\n    if (!identifier) {\n      identifier = this.generateIdentifier(value);\n    }\n    this.kv.set(identifier, value);\n  };\n  Registry.prototype.clear = function () {\n    this.kv.clear();\n  };\n  Registry.prototype.getIdentifier = function (value) {\n    return this.kv.getByValue(value);\n  };\n  Registry.prototype.getValue = function (identifier) {\n    return this.kv.getByKey(identifier);\n  };\n  return Registry;\n}();\nexport { Registry };","map":{"version":3,"sources":["../../src/registry.ts"],"names":[],"mappings":"AAAA,SAAS,eAAe,QAAQ,qBAAqB;AAErD,IAAA,QAAA,GAAA,aAAA,YAAA;EAGE,SAAA,QAAA,CAA6B,kBAAoC,EAAA;IAApC,IAAA,CAAA,kBAAkB,GAAlB,kBAAkB;IAFvC,IAAA,CAAA,EAAE,GAAG,IAAI,eAAe,CAAA,CAAa;EAEuB;EAEpE,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,KAAQ,EAAE,UAAmB,EAAA;IACpC,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;MAC7B;IACD;IAED,IAAI,CAAC,UAAU,EAAE;MACf,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC5C;IAED,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;EAChC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IACE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAA,CAAE;EACjB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,KAAQ,EAAA;IACpB,OAAO,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;EAClC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,UAAkB,EAAA;IACzB,OAAO,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC;EACrC,CAAC;EACH,OAAA,QAAC;AAAD,CAAC,CAAA,CAAA","sourceRoot":"","sourcesContent":["import { DoubleIndexedKV } from './double-indexed-kv';\nvar Registry = /** @class */ (function () {\n    function Registry(generateIdentifier) {\n        this.generateIdentifier = generateIdentifier;\n        this.kv = new DoubleIndexedKV();\n    }\n    Registry.prototype.register = function (value, identifier) {\n        if (this.kv.getByValue(value)) {\n            return;\n        }\n        if (!identifier) {\n            identifier = this.generateIdentifier(value);\n        }\n        this.kv.set(identifier, value);\n    };\n    Registry.prototype.clear = function () {\n        this.kv.clear();\n    };\n    Registry.prototype.getIdentifier = function (value) {\n        return this.kv.getByValue(value);\n    };\n    Registry.prototype.getValue = function (identifier) {\n        return this.kv.getByKey(identifier);\n    };\n    return Registry;\n}());\nexport { Registry };\n//# sourceMappingURL=registry.js.map"]},"metadata":{},"sourceType":"module"}