{"ast":null,"code":"'use client';\n\nimport { ReactQueryDevtools as ReactQueryDevtools$1, ReactQueryDevtoolsPanel as ReactQueryDevtoolsPanel$1 } from './devtools.esm.js';\nconst ReactQueryDevtools = process.env.NODE_ENV !== 'development' ? function () {\n  return null;\n} : ReactQueryDevtools$1;\nconst ReactQueryDevtoolsPanel = process.env.NODE_ENV !== 'development' ? function () {\n  return null;\n} : ReactQueryDevtoolsPanel$1;\nexport { ReactQueryDevtools, ReactQueryDevtoolsPanel };","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":";;;AAIO,MAAA,kBAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,aAAA,GAAA,YAAA;EAGC,OAAA,IAAA;AACD,CAAA,GAAA,oBAAA;AAGA,MAAA,uBAAA,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,aAAA,GAAA,YAAA;EAGC,OAAA,IAAA;AACD,CAAA,GAAA,yBAAA","sourcesContent":["'use client'\n\nimport * as devtools from './devtools'\n\nexport const ReactQueryDevtools: typeof devtools['ReactQueryDevtools'] =\n  process.env.NODE_ENV !== 'development'\n    ? function () {\n        return null\n      }\n    : devtools.ReactQueryDevtools\n\nexport const ReactQueryDevtoolsPanel: typeof devtools['ReactQueryDevtoolsPanel'] =\n  process.env.NODE_ENV !== 'development'\n    ? (function () {\n        return null\n      } as any)\n    : devtools.ReactQueryDevtoolsPanel\n"]},"metadata":{},"sourceType":"module"}