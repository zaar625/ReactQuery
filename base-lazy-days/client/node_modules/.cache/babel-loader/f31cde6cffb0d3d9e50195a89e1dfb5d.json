{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nimport { isBigint, isDate, isInfinite, isMap, isNaNValue, isRegExp, isSet, isUndefined, isSymbol, isArray, isError, isTypedArray, isURL } from './is';\nimport { findArr } from './util';\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n  return {\n    isApplicable: isApplicable,\n    annotation: annotation,\n    transform: transform,\n    untransform: untransform\n  };\n}\nvar simpleRules = [simpleTransformation(isUndefined, 'undefined', function () {\n  return null;\n}, function () {\n  return undefined;\n}), simpleTransformation(isBigint, 'bigint', function (v) {\n  return v.toString();\n}, function (v) {\n  if (typeof BigInt !== 'undefined') {\n    return BigInt(v);\n  }\n  console.error('Please add a BigInt polyfill.');\n  return v;\n}), simpleTransformation(isDate, 'Date', function (v) {\n  return v.toISOString();\n}, function (v) {\n  return new Date(v);\n}), simpleTransformation(isError, 'Error', function (v, superJson) {\n  var baseError = {\n    name: v.name,\n    message: v.message\n  };\n  superJson.allowedErrorProps.forEach(function (prop) {\n    baseError[prop] = v[prop];\n  });\n  return baseError;\n}, function (v, superJson) {\n  var e = new Error(v.message);\n  e.name = v.name;\n  e.stack = v.stack;\n  superJson.allowedErrorProps.forEach(function (prop) {\n    e[prop] = v[prop];\n  });\n  return e;\n}), simpleTransformation(isRegExp, 'regexp', function (v) {\n  return '' + v;\n}, function (regex) {\n  var body = regex.slice(1, regex.lastIndexOf('/'));\n  var flags = regex.slice(regex.lastIndexOf('/') + 1);\n  return new RegExp(body, flags);\n}), simpleTransformation(isSet, 'set',\n// (sets only exist in es6+)\n// eslint-disable-next-line es5/no-es6-methods\nfunction (v) {\n  return __spreadArray([], __read(v.values()));\n}, function (v) {\n  return new Set(v);\n}), simpleTransformation(isMap, 'map', function (v) {\n  return __spreadArray([], __read(v.entries()));\n}, function (v) {\n  return new Map(v);\n}), simpleTransformation(function (v) {\n  return isNaNValue(v) || isInfinite(v);\n}, 'number', function (v) {\n  if (isNaNValue(v)) {\n    return 'NaN';\n  }\n  if (v > 0) {\n    return 'Infinity';\n  } else {\n    return '-Infinity';\n  }\n}, Number), simpleTransformation(function (v) {\n  return v === 0 && 1 / v === -Infinity;\n}, 'number', function () {\n  return '-0';\n}, Number), simpleTransformation(isURL, 'URL', function (v) {\n  return v.toString();\n}, function (v) {\n  return new URL(v);\n})];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n  return {\n    isApplicable: isApplicable,\n    annotation: annotation,\n    transform: transform,\n    untransform: untransform\n  };\n}\nvar symbolRule = compositeTransformation(function (s, superJson) {\n  if (isSymbol(s)) {\n    var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n    return isRegistered;\n  }\n  return false;\n}, function (s, superJson) {\n  var identifier = superJson.symbolRegistry.getIdentifier(s);\n  return ['symbol', identifier];\n}, function (v) {\n  return v.description;\n}, function (_, a, superJson) {\n  var value = superJson.symbolRegistry.getValue(a[1]);\n  if (!value) {\n    throw new Error('Trying to deserialize unknown symbol');\n  }\n  return value;\n});\nvar constructorToName = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, Uint8ClampedArray].reduce(function (obj, ctor) {\n  obj[ctor.name] = ctor;\n  return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, function (v) {\n  return ['typed-array', v.constructor.name];\n}, function (v) {\n  return __spreadArray([], __read(v));\n}, function (v, a) {\n  var ctor = constructorToName[a[1]];\n  if (!ctor) {\n    throw new Error('Trying to deserialize unknown typed array');\n  }\n  return new ctor(v);\n});\nexport function isInstanceOfRegisteredClass(potentialClass, superJson) {\n  if (potentialClass === null || potentialClass === void 0 ? void 0 : potentialClass.constructor) {\n    var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n    return isRegistered;\n  }\n  return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, function (clazz, superJson) {\n  var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n  return ['class', identifier];\n}, function (clazz, superJson) {\n  var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n  if (!allowedProps) {\n    return __assign({}, clazz);\n  }\n  var result = {};\n  allowedProps.forEach(function (prop) {\n    result[prop] = clazz[prop];\n  });\n  return result;\n}, function (v, a, superJson) {\n  var clazz = superJson.classRegistry.getValue(a[1]);\n  if (!clazz) {\n    throw new Error('Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564');\n  }\n  return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation(function (value, superJson) {\n  return !!superJson.customTransformerRegistry.findApplicable(value);\n}, function (value, superJson) {\n  var transformer = superJson.customTransformerRegistry.findApplicable(value);\n  return ['custom', transformer.name];\n}, function (value, superJson) {\n  var transformer = superJson.customTransformerRegistry.findApplicable(value);\n  return transformer.serialize(value);\n}, function (v, a, superJson) {\n  var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n  if (!transformer) {\n    throw new Error('Trying to deserialize unknown custom value');\n  }\n  return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nexport var transformValue = function (value, superJson) {\n  var applicableCompositeRule = findArr(compositeRules, function (rule) {\n    return rule.isApplicable(value, superJson);\n  });\n  if (applicableCompositeRule) {\n    return {\n      value: applicableCompositeRule.transform(value, superJson),\n      type: applicableCompositeRule.annotation(value, superJson)\n    };\n  }\n  var applicableSimpleRule = findArr(simpleRules, function (rule) {\n    return rule.isApplicable(value, superJson);\n  });\n  if (applicableSimpleRule) {\n    return {\n      value: applicableSimpleRule.transform(value, superJson),\n      type: applicableSimpleRule.annotation\n    };\n  }\n  return undefined;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach(function (rule) {\n  simpleRulesByAnnotation[rule.annotation] = rule;\n});\nexport var untransformValue = function (json, type, superJson) {\n  if (isArray(type)) {\n    switch (type[0]) {\n      case 'symbol':\n        return symbolRule.untransform(json, type, superJson);\n      case 'class':\n        return classRule.untransform(json, type, superJson);\n      case 'custom':\n        return customRule.untransform(json, type, superJson);\n      case 'typed-array':\n        return typedArrayRule.untransform(json, type, superJson);\n      default:\n        throw new Error('Unknown transformation: ' + type);\n    }\n  } else {\n    var transformation = simpleRulesByAnnotation[type];\n    if (!transformation) {\n      throw new Error('Unknown transformation: ' + type);\n    }\n    return transformation.untransform(json, superJson);\n  }\n};","map":{"version":3,"sources":["../../src/transformer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { isBigint, isDate, isInfinite, isMap, isNaNValue, isRegExp, isSet, isUndefined, isSymbol, isArray, isError, isTypedArray, isURL, } from './is';\nimport { findArr } from './util';\nfunction simpleTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar simpleRules = [\n    simpleTransformation(isUndefined, 'undefined', function () { return null; }, function () { return undefined; }),\n    simpleTransformation(isBigint, 'bigint', function (v) { return v.toString(); }, function (v) {\n        if (typeof BigInt !== 'undefined') {\n            return BigInt(v);\n        }\n        console.error('Please add a BigInt polyfill.');\n        return v;\n    }),\n    simpleTransformation(isDate, 'Date', function (v) { return v.toISOString(); }, function (v) { return new Date(v); }),\n    simpleTransformation(isError, 'Error', function (v, superJson) {\n        var baseError = {\n            name: v.name,\n            message: v.message\n        };\n        superJson.allowedErrorProps.forEach(function (prop) {\n            baseError[prop] = v[prop];\n        });\n        return baseError;\n    }, function (v, superJson) {\n        var e = new Error(v.message);\n        e.name = v.name;\n        e.stack = v.stack;\n        superJson.allowedErrorProps.forEach(function (prop) {\n            e[prop] = v[prop];\n        });\n        return e;\n    }),\n    simpleTransformation(isRegExp, 'regexp', function (v) { return '' + v; }, function (regex) {\n        var body = regex.slice(1, regex.lastIndexOf('/'));\n        var flags = regex.slice(regex.lastIndexOf('/') + 1);\n        return new RegExp(body, flags);\n    }),\n    simpleTransformation(isSet, 'set', \n    // (sets only exist in es6+)\n    // eslint-disable-next-line es5/no-es6-methods\n    function (v) { return __spreadArray([], __read(v.values())); }, function (v) { return new Set(v); }),\n    simpleTransformation(isMap, 'map', function (v) { return __spreadArray([], __read(v.entries())); }, function (v) { return new Map(v); }),\n    simpleTransformation(function (v) { return isNaNValue(v) || isInfinite(v); }, 'number', function (v) {\n        if (isNaNValue(v)) {\n            return 'NaN';\n        }\n        if (v > 0) {\n            return 'Infinity';\n        }\n        else {\n            return '-Infinity';\n        }\n    }, Number),\n    simpleTransformation(function (v) { return v === 0 && 1 / v === -Infinity; }, 'number', function () {\n        return '-0';\n    }, Number),\n    simpleTransformation(isURL, 'URL', function (v) { return v.toString(); }, function (v) { return new URL(v); }),\n];\nfunction compositeTransformation(isApplicable, annotation, transform, untransform) {\n    return {\n        isApplicable: isApplicable,\n        annotation: annotation,\n        transform: transform,\n        untransform: untransform\n    };\n}\nvar symbolRule = compositeTransformation(function (s, superJson) {\n    if (isSymbol(s)) {\n        var isRegistered = !!superJson.symbolRegistry.getIdentifier(s);\n        return isRegistered;\n    }\n    return false;\n}, function (s, superJson) {\n    var identifier = superJson.symbolRegistry.getIdentifier(s);\n    return ['symbol', identifier];\n}, function (v) { return v.description; }, function (_, a, superJson) {\n    var value = superJson.symbolRegistry.getValue(a[1]);\n    if (!value) {\n        throw new Error('Trying to deserialize unknown symbol');\n    }\n    return value;\n});\nvar constructorToName = [\n    Int8Array,\n    Uint8Array,\n    Int16Array,\n    Uint16Array,\n    Int32Array,\n    Uint32Array,\n    Float32Array,\n    Float64Array,\n    Uint8ClampedArray,\n].reduce(function (obj, ctor) {\n    obj[ctor.name] = ctor;\n    return obj;\n}, {});\nvar typedArrayRule = compositeTransformation(isTypedArray, function (v) { return ['typed-array', v.constructor.name]; }, function (v) { return __spreadArray([], __read(v)); }, function (v, a) {\n    var ctor = constructorToName[a[1]];\n    if (!ctor) {\n        throw new Error('Trying to deserialize unknown typed array');\n    }\n    return new ctor(v);\n});\nexport function isInstanceOfRegisteredClass(potentialClass, superJson) {\n    if (potentialClass === null || potentialClass === void 0 ? void 0 : potentialClass.constructor) {\n        var isRegistered = !!superJson.classRegistry.getIdentifier(potentialClass.constructor);\n        return isRegistered;\n    }\n    return false;\n}\nvar classRule = compositeTransformation(isInstanceOfRegisteredClass, function (clazz, superJson) {\n    var identifier = superJson.classRegistry.getIdentifier(clazz.constructor);\n    return ['class', identifier];\n}, function (clazz, superJson) {\n    var allowedProps = superJson.classRegistry.getAllowedProps(clazz.constructor);\n    if (!allowedProps) {\n        return __assign({}, clazz);\n    }\n    var result = {};\n    allowedProps.forEach(function (prop) {\n        result[prop] = clazz[prop];\n    });\n    return result;\n}, function (v, a, superJson) {\n    var clazz = superJson.classRegistry.getValue(a[1]);\n    if (!clazz) {\n        throw new Error('Trying to deserialize unknown class - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564');\n    }\n    return Object.assign(Object.create(clazz.prototype), v);\n});\nvar customRule = compositeTransformation(function (value, superJson) {\n    return !!superJson.customTransformerRegistry.findApplicable(value);\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return ['custom', transformer.name];\n}, function (value, superJson) {\n    var transformer = superJson.customTransformerRegistry.findApplicable(value);\n    return transformer.serialize(value);\n}, function (v, a, superJson) {\n    var transformer = superJson.customTransformerRegistry.findByName(a[1]);\n    if (!transformer) {\n        throw new Error('Trying to deserialize unknown custom value');\n    }\n    return transformer.deserialize(v);\n});\nvar compositeRules = [classRule, symbolRule, customRule, typedArrayRule];\nexport var transformValue = function (value, superJson) {\n    var applicableCompositeRule = findArr(compositeRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableCompositeRule) {\n        return {\n            value: applicableCompositeRule.transform(value, superJson),\n            type: applicableCompositeRule.annotation(value, superJson)\n        };\n    }\n    var applicableSimpleRule = findArr(simpleRules, function (rule) {\n        return rule.isApplicable(value, superJson);\n    });\n    if (applicableSimpleRule) {\n        return {\n            value: applicableSimpleRule.transform(value, superJson),\n            type: applicableSimpleRule.annotation\n        };\n    }\n    return undefined;\n};\nvar simpleRulesByAnnotation = {};\nsimpleRules.forEach(function (rule) {\n    simpleRulesByAnnotation[rule.annotation] = rule;\n});\nexport var untransformValue = function (json, type, superJson) {\n    if (isArray(type)) {\n        switch (type[0]) {\n            case 'symbol':\n                return symbolRule.untransform(json, type, superJson);\n            case 'class':\n                return classRule.untransform(json, type, superJson);\n            case 'custom':\n                return customRule.untransform(json, type, superJson);\n            case 'typed-array':\n                return typedArrayRule.untransform(json, type, superJson);\n            default:\n                throw new Error('Unknown transformation: ' + type);\n        }\n    }\n    else {\n        var transformation = simpleRulesByAnnotation[type];\n        if (!transformation) {\n            throw new Error('Unknown transformation: ' + type);\n        }\n        return transformation.untransform(json, superJson);\n    }\n};\n//# sourceMappingURL=transformer.js.map"]},"metadata":{},"sourceType":"module"}