{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n  return to;\n};\nimport { ClassRegistry } from './class-registry';\nimport { Registry } from './registry';\nimport { CustomTransformerRegistry } from './custom-transformer-registry';\nimport { walker, applyReferentialEqualityAnnotations, applyValueAnnotations, generateReferentialEqualityAnnotations } from './plainer';\nimport { copy } from 'copy-anything';\nvar SuperJSON = /** @class */function () {\n  function SuperJSON() {\n    this.classRegistry = new ClassRegistry();\n    this.symbolRegistry = new Registry(function (s) {\n      var _a;\n      return (_a = s.description) !== null && _a !== void 0 ? _a : '';\n    });\n    this.customTransformerRegistry = new CustomTransformerRegistry();\n    this.allowedErrorProps = [];\n  }\n  SuperJSON.prototype.serialize = function (object) {\n    var identities = new Map();\n    var output = walker(object, identities, this);\n    var res = {\n      json: output.transformedValue\n    };\n    if (output.annotations) {\n      res.meta = __assign(__assign({}, res.meta), {\n        values: output.annotations\n      });\n    }\n    var equalityAnnotations = generateReferentialEqualityAnnotations(identities);\n    if (equalityAnnotations) {\n      res.meta = __assign(__assign({}, res.meta), {\n        referentialEqualities: equalityAnnotations\n      });\n    }\n    return res;\n  };\n  SuperJSON.prototype.deserialize = function (payload) {\n    var json = payload.json,\n      meta = payload.meta;\n    var result = copy(json);\n    if (meta === null || meta === void 0 ? void 0 : meta.values) {\n      result = applyValueAnnotations(result, meta.values, this);\n    }\n    if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n      result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n    }\n    return result;\n  };\n  SuperJSON.prototype.stringify = function (object) {\n    return JSON.stringify(this.serialize(object));\n  };\n  SuperJSON.prototype.parse = function (string) {\n    return this.deserialize(JSON.parse(string));\n  };\n  SuperJSON.prototype.registerClass = function (v, options) {\n    this.classRegistry.register(v, options);\n  };\n  SuperJSON.prototype.registerSymbol = function (v, identifier) {\n    this.symbolRegistry.register(v, identifier);\n  };\n  SuperJSON.prototype.registerCustom = function (transformer, name) {\n    this.customTransformerRegistry.register(__assign({\n      name: name\n    }, transformer));\n  };\n  SuperJSON.prototype.allowErrorProps = function () {\n    var _a;\n    var props = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      props[_i] = arguments[_i];\n    }\n    (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n  };\n  SuperJSON.defaultInstance = new SuperJSON();\n  SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n  SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n  SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n  SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n  SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n  SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n  return SuperJSON;\n}();\nexport default SuperJSON;\nexport var serialize = SuperJSON.serialize;\nexport var deserialize = SuperJSON.deserialize;\nexport var stringify = SuperJSON.stringify;\nexport var parse = SuperJSON.parse;\nexport var registerClass = SuperJSON.registerClass;\nexport var registerCustom = SuperJSON.registerCustom;\nexport var registerSymbol = SuperJSON.registerSymbol;\nexport var allowErrorProps = SuperJSON.allowErrorProps;","map":{"version":3,"sources":["../../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nimport { ClassRegistry } from './class-registry';\nimport { Registry } from './registry';\nimport { CustomTransformerRegistry, } from './custom-transformer-registry';\nimport { walker, applyReferentialEqualityAnnotations, applyValueAnnotations, generateReferentialEqualityAnnotations, } from './plainer';\nimport { copy } from 'copy-anything';\nvar SuperJSON = /** @class */ (function () {\n    function SuperJSON() {\n        this.classRegistry = new ClassRegistry();\n        this.symbolRegistry = new Registry(function (s) { var _a; return (_a = s.description) !== null && _a !== void 0 ? _a : ''; });\n        this.customTransformerRegistry = new CustomTransformerRegistry();\n        this.allowedErrorProps = [];\n    }\n    SuperJSON.prototype.serialize = function (object) {\n        var identities = new Map();\n        var output = walker(object, identities, this);\n        var res = {\n            json: output.transformedValue\n        };\n        if (output.annotations) {\n            res.meta = __assign(__assign({}, res.meta), { values: output.annotations });\n        }\n        var equalityAnnotations = generateReferentialEqualityAnnotations(identities);\n        if (equalityAnnotations) {\n            res.meta = __assign(__assign({}, res.meta), { referentialEqualities: equalityAnnotations });\n        }\n        return res;\n    };\n    SuperJSON.prototype.deserialize = function (payload) {\n        var json = payload.json, meta = payload.meta;\n        var result = copy(json);\n        if (meta === null || meta === void 0 ? void 0 : meta.values) {\n            result = applyValueAnnotations(result, meta.values, this);\n        }\n        if (meta === null || meta === void 0 ? void 0 : meta.referentialEqualities) {\n            result = applyReferentialEqualityAnnotations(result, meta.referentialEqualities);\n        }\n        return result;\n    };\n    SuperJSON.prototype.stringify = function (object) {\n        return JSON.stringify(this.serialize(object));\n    };\n    SuperJSON.prototype.parse = function (string) {\n        return this.deserialize(JSON.parse(string));\n    };\n    SuperJSON.prototype.registerClass = function (v, options) {\n        this.classRegistry.register(v, options);\n    };\n    SuperJSON.prototype.registerSymbol = function (v, identifier) {\n        this.symbolRegistry.register(v, identifier);\n    };\n    SuperJSON.prototype.registerCustom = function (transformer, name) {\n        this.customTransformerRegistry.register(__assign({ name: name }, transformer));\n    };\n    SuperJSON.prototype.allowErrorProps = function () {\n        var _a;\n        var props = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            props[_i] = arguments[_i];\n        }\n        (_a = this.allowedErrorProps).push.apply(_a, __spreadArray([], __read(props)));\n    };\n    SuperJSON.defaultInstance = new SuperJSON();\n    SuperJSON.serialize = SuperJSON.defaultInstance.serialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.deserialize = SuperJSON.defaultInstance.deserialize.bind(SuperJSON.defaultInstance);\n    SuperJSON.stringify = SuperJSON.defaultInstance.stringify.bind(SuperJSON.defaultInstance);\n    SuperJSON.parse = SuperJSON.defaultInstance.parse.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerClass = SuperJSON.defaultInstance.registerClass.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerSymbol = SuperJSON.defaultInstance.registerSymbol.bind(SuperJSON.defaultInstance);\n    SuperJSON.registerCustom = SuperJSON.defaultInstance.registerCustom.bind(SuperJSON.defaultInstance);\n    SuperJSON.allowErrorProps = SuperJSON.defaultInstance.allowErrorProps.bind(SuperJSON.defaultInstance);\n    return SuperJSON;\n}());\nexport default SuperJSON;\nexport var serialize = SuperJSON.serialize;\nexport var deserialize = SuperJSON.deserialize;\nexport var stringify = SuperJSON.stringify;\nexport var parse = SuperJSON.parse;\nexport var registerClass = SuperJSON.registerClass;\nexport var registerCustom = SuperJSON.registerCustom;\nexport var registerSymbol = SuperJSON.registerSymbol;\nexport var allowErrorProps = SuperJSON.allowErrorProps;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}