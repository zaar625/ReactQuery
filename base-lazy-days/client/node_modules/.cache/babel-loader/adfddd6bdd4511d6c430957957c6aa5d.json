{"ast":null,"code":"import * as React from 'react';\nfunction useMediaQuery(query) {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches;\n    }\n    return;\n  }); // Watch for changes\n\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query); // Create our handler\n\n      const onChange = _ref => {\n        let {\n          matches\n        } = _ref;\n        return setIsMatch(matches);\n      }; // Listen for changes\n\n      matcher.addListener(onChange);\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange);\n      };\n    }\n    return;\n  }, [isMatch, query, setIsMatch]);\n  return isMatch;\n}\nexport { useMediaQuery as default };","map":{"version":3,"sources":["../../src/useMediaQuery.ts"],"names":["useMediaQuery","query","isMatch","setIsMatch","useState","window","matchMedia","matches","React","useEffect","matcher","onChange","addListener","removeListener"],"mappings":";AAEe,SAASA,aAAT,CAAuBC,KAAvB,EAA2D;EACxE;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,CAAA,GAAwB,KAAK,CAACC,QAAN,CAAe,MAAM;IACjD,IAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;MACjC,OAAOA,MAAM,CAACC,UAAPD,CAAkBJ,KAAlBI,CAAAA,CAAyBE,OAAhC;IACD;IACD;GAJ4B,CAA9B,CAFwE,CAAA;;EAUxEC,KAAK,CAACC,SAAND,CAAgB,MAAM;IACpB,IAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmC;MACjC;MACA,MAAMK,OAAO,GAAGL,MAAM,CAACC,UAAPD,CAAkBJ,KAAlBI,CAAhB,CAFiC,CAAA;;MAKjC,MAAMM,QAAQ,GAAG,IAAA;QAAA,IAAC;UAAEJ;QAAF,CAAD,GAAA,IAAA;QAAA,OACfJ,UAAU,CAACI,OAAD,CADZ;MAAA,EALiC,CAAA;;MASjCG,OAAO,CAACE,WAARF,CAAoBC,QAApBD,CAAAA;MAEA,OAAO,MAAM;QACX;QACAA,OAAO,CAACG,cAARH,CAAuBC,QAAvBD,CAAAA;OAFF;IAID;IACD;EACD,CAlBDF,EAkBG,CAACN,OAAD,EAAUD,KAAV,EAAiBE,UAAjB,CAlBHK,CAAAA;EAoBA,OAAON,OAAP;AACD","sourcesContent":["import * as React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(query).matches\n    }\n    return\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n    return\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n"]},"metadata":{},"sourceType":"module"}