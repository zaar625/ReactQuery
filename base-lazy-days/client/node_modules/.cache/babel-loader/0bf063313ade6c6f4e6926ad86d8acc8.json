{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nfunction valuesOfObj(record) {\n  if ('values' in Object) {\n    // eslint-disable-next-line es5/no-es6-methods\n    return Object.values(record);\n  }\n  var values = [];\n  // eslint-disable-next-line no-restricted-syntax\n  for (var key in record) {\n    if (record.hasOwnProperty(key)) {\n      values.push(record[key]);\n    }\n  }\n  return values;\n}\nexport function find(record, predicate) {\n  var values = valuesOfObj(record);\n  if ('find' in values) {\n    // eslint-disable-next-line es5/no-es6-methods\n    return values.find(predicate);\n  }\n  var valuesNotNever = values;\n  for (var i = 0; i < valuesNotNever.length; i++) {\n    var value = valuesNotNever[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n  return undefined;\n}\nexport function forEach(record, run) {\n  Object.entries(record).forEach(function (_a) {\n    var _b = __read(_a, 2),\n      key = _b[0],\n      value = _b[1];\n    return run(value, key);\n  });\n}\nexport function includes(arr, value) {\n  return arr.indexOf(value) !== -1;\n}\nexport function findArr(record, predicate) {\n  for (var i = 0; i < record.length; i++) {\n    var value = record[i];\n    if (predicate(value)) {\n      return value;\n    }\n  }\n  return undefined;\n}","map":{"version":3,"sources":["../../src/util.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,WAAW,CAAI,MAAyB,EAAA;EAC/C,IAAI,QAAQ,IAAI,MAAM,EAAE;IACtB;IACA,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;EAC7B;EAED,IAAM,MAAM,GAAQ,EAAE;EAEtB;EACA,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;IACxB,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;MAC9B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzB;EACF;EAED,OAAO,MAAM;AACf;AAEA,OAAM,SAAU,IAAI,CAClB,MAAyB,EACzB,SAA4B,EAAA;EAE5B,IAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;EAClC,IAAI,MAAM,IAAI,MAAM,EAAE;IACpB;IACA,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;EAC9B;EAED,IAAM,cAAc,GAAG,MAAa;EAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,IAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC;IAC/B,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;MACpB,OAAO,KAAK;IACb;EACF;EAED,OAAO,SAAS;AAClB;AAEA,OAAM,SAAU,OAAO,CACrB,MAAyB,EACzB,GAAgC,EAAA;EAEhC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,EAAY,EAAA;QAAZ,EAAA,GAAA,MAAA,CAAA,EAAA,EAAA,CAAA,CAAY;MAAX,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA;IAAM,OAAA,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC;EAAf,CAAe,CAAC;AACnE;AAEA,OAAM,SAAU,QAAQ,CAAI,GAAQ,EAAE,KAAQ,EAAA;EAC5C,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAClC;AAEA,OAAM,SAAU,OAAO,CACrB,MAAW,EACX,SAA4B,EAAA;EAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtC,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;IACvB,IAAI,SAAS,CAAC,KAAK,CAAC,EAAE;MACpB,OAAO,KAAK;IACb;EACF;EAED,OAAO,SAAS;AAClB","sourceRoot":"","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nfunction valuesOfObj(record) {\n    if ('values' in Object) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return Object.values(record);\n    }\n    var values = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in record) {\n        if (record.hasOwnProperty(key)) {\n            values.push(record[key]);\n        }\n    }\n    return values;\n}\nexport function find(record, predicate) {\n    var values = valuesOfObj(record);\n    if ('find' in values) {\n        // eslint-disable-next-line es5/no-es6-methods\n        return values.find(predicate);\n    }\n    var valuesNotNever = values;\n    for (var i = 0; i < valuesNotNever.length; i++) {\n        var value = valuesNotNever[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\nexport function forEach(record, run) {\n    Object.entries(record).forEach(function (_a) {\n        var _b = __read(_a, 2), key = _b[0], value = _b[1];\n        return run(value, key);\n    });\n}\nexport function includes(arr, value) {\n    return arr.indexOf(value) !== -1;\n}\nexport function findArr(record, predicate) {\n    for (var i = 0; i < record.length; i++) {\n        var value = record[i];\n        if (predicate(value)) {\n            return value;\n        }\n    }\n    return undefined;\n}\n//# sourceMappingURL=util.js.map"]},"metadata":{},"sourceType":"module"}