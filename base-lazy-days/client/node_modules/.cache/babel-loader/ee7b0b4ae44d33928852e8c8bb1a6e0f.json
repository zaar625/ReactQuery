{"ast":null,"code":"var _jsxFileName = \"/Users/lee/Desktop/study/React-Query/base-lazy-days/client/src/components/appointments/Appointment.tsx\",\n  _s = $RefreshSig$();\nimport { Box, HStack, Text } from '@chakra-ui/react';\nimport dayjs from 'dayjs';\nimport { useUser } from '../user/hooks/useUser';\nimport { useReserveAppointment } from './hooks/useReserveAppointment';\nimport { appointmentInPast, getAppointmentColor } from './utils';\n\n// determine whether this appointment can be reserved / un-reserved by logged-in user\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isClickable(user, appointmentData) {\n  return !!(user !== null && user !== void 0 && user.id && (!appointmentData.userId || appointmentData.userId === (user === null || user === void 0 ? void 0 : user.id)) && !appointmentInPast(appointmentData));\n}\nexport function Appointment(_ref) {\n  _s();\n  let {\n    appointmentData\n  } = _ref;\n  const {\n    user\n  } = useUser();\n  const reserveAppointment = useReserveAppointment();\n  const [textColor, bgColor] = getAppointmentColor(appointmentData, user === null || user === void 0 ? void 0 : user.id);\n  const clickable = isClickable(user, appointmentData);\n  let onAppointmentClick;\n  let hoverCss = {};\n\n  // turn the lozenge into a button if it's clickable\n  if (clickable) {\n    onAppointmentClick = user ? () => reserveAppointment(appointmentData) : undefined;\n    hoverCss = {\n      transform: 'translateY(-1px)',\n      boxShadow: 'md',\n      cursor: 'pointer'\n    };\n  }\n  const appointmentHour = dayjs(appointmentData.dateTime).format('h a');\n  return /*#__PURE__*/_jsxDEV(Box, {\n    borderRadius: \"lg\",\n    px: 2,\n    bgColor: bgColor,\n    color: textColor,\n    as: clickable ? 'button' : 'div',\n    onClick: onAppointmentClick,\n    _hover: hoverCss,\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        as: \"span\",\n        fontSize: \"xs\",\n        children: appointmentHour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        as: \"span\",\n        fontSize: \"xs\",\n        children: appointmentData.treatmentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Appointment, \"XdZY9nTLU5wD1J9iKiwzxJrOvuE=\", false, function () {\n  return [useUser, useReserveAppointment];\n});\n_c = Appointment;\nvar _c;\n$RefreshReg$(_c, \"Appointment\");","map":{"version":3,"names":["Box","HStack","Text","dayjs","useUser","useReserveAppointment","appointmentInPast","getAppointmentColor","jsxDEV","_jsxDEV","isClickable","user","appointmentData","id","userId","Appointment","_ref","_s","reserveAppointment","textColor","bgColor","clickable","onAppointmentClick","hoverCss","undefined","transform","boxShadow","cursor","appointmentHour","dateTime","format","borderRadius","px","color","as","onClick","_hover","children","justify","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","treatmentName","_c","$RefreshReg$"],"sources":["/Users/lee/Desktop/study/React-Query/base-lazy-days/client/src/components/appointments/Appointment.tsx"],"sourcesContent":["import { Box, HStack, Text } from '@chakra-ui/react';\nimport dayjs from 'dayjs';\nimport { ReactElement } from 'react';\n\nimport { Appointment as AppointmentType, User } from '../../../../shared/types';\nimport { useUser } from '../user/hooks/useUser';\nimport { useReserveAppointment } from './hooks/useReserveAppointment';\nimport { appointmentInPast, getAppointmentColor } from './utils';\n\n// determine whether this appointment can be reserved / un-reserved by logged-in user\nfunction isClickable(\n  user: User | null,\n  appointmentData: AppointmentType,\n): boolean {\n  return !!(\n    user?.id &&\n    (!appointmentData.userId || appointmentData.userId === user?.id) &&\n    !appointmentInPast(appointmentData)\n  );\n}\n\ninterface AppointmentProps {\n  appointmentData: AppointmentType;\n}\n\nexport function Appointment({\n  appointmentData,\n}: AppointmentProps): ReactElement {\n  const { user } = useUser();\n  const reserveAppointment = useReserveAppointment();\n  const [textColor, bgColor] = getAppointmentColor(appointmentData, user?.id);\n\n  const clickable = isClickable(user, appointmentData);\n  let onAppointmentClick: undefined | (() => void);\n  let hoverCss = {};\n\n  // turn the lozenge into a button if it's clickable\n  if (clickable) {\n    onAppointmentClick = user\n      ? () => reserveAppointment(appointmentData)\n      : undefined;\n    hoverCss = {\n      transform: 'translateY(-1px)',\n      boxShadow: 'md',\n      cursor: 'pointer',\n    };\n  }\n\n  const appointmentHour = dayjs(appointmentData.dateTime).format('h a');\n  return (\n    <Box\n      borderRadius=\"lg\"\n      px={2}\n      bgColor={bgColor}\n      color={textColor}\n      as={clickable ? 'button' : 'div'}\n      onClick={onAppointmentClick}\n      _hover={hoverCss}\n    >\n      <HStack justify=\"space-between\">\n        <Text as=\"span\" fontSize=\"xs\">\n          {appointmentHour}\n        </Text>\n        <Text as=\"span\" fontSize=\"xs\">\n          {appointmentData.treatmentName}\n        </Text>\n      </HStack>\n    </Box>\n  );\n}\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAIzB,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,qBAAqB,QAAQ,+BAA+B;AACrE,SAASC,iBAAiB,EAAEC,mBAAmB,QAAQ,SAAS;;AAEhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAClBC,IAAiB,EACjBC,eAAgC,EACvB;EACT,OAAO,CAAC,EACND,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEE,EAAE,KACP,CAACD,eAAe,CAACE,MAAM,IAAIF,eAAe,CAACE,MAAM,MAAKH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE,EAAC,IAChE,CAACP,iBAAiB,CAACM,eAAe,CAAC,CACpC;AACH;AAMA,OAAO,SAASG,WAAWA,CAAAC,IAAA,EAEQ;EAAAC,EAAA;EAAA,IAFP;IAC1BL;EACgB,CAAC,GAAAI,IAAA;EACjB,MAAM;IAAEL;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC1B,MAAMc,kBAAkB,GAAGb,qBAAqB,CAAC,CAAC;EAClD,MAAM,CAACc,SAAS,EAAEC,OAAO,CAAC,GAAGb,mBAAmB,CAACK,eAAe,EAAED,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,EAAE,CAAC;EAE3E,MAAMQ,SAAS,GAAGX,WAAW,CAACC,IAAI,EAAEC,eAAe,CAAC;EACpD,IAAIU,kBAA4C;EAChD,IAAIC,QAAQ,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAIF,SAAS,EAAE;IACbC,kBAAkB,GAAGX,IAAI,GACrB,MAAMO,kBAAkB,CAACN,eAAe,CAAC,GACzCY,SAAS;IACbD,QAAQ,GAAG;MACTE,SAAS,EAAE,kBAAkB;MAC7BC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE;IACV,CAAC;EACH;EAEA,MAAMC,eAAe,GAAGzB,KAAK,CAACS,eAAe,CAACiB,QAAQ,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC;EACrE,oBACErB,OAAA,CAACT,GAAG;IACF+B,YAAY,EAAC,IAAI;IACjBC,EAAE,EAAE,CAAE;IACNZ,OAAO,EAAEA,OAAQ;IACjBa,KAAK,EAAEd,SAAU;IACjBe,EAAE,EAAEb,SAAS,GAAG,QAAQ,GAAG,KAAM;IACjCc,OAAO,EAAEb,kBAAmB;IAC5Bc,MAAM,EAAEb,QAAS;IAAAc,QAAA,eAEjB5B,OAAA,CAACR,MAAM;MAACqC,OAAO,EAAC,eAAe;MAAAD,QAAA,gBAC7B5B,OAAA,CAACP,IAAI;QAACgC,EAAE,EAAC,MAAM;QAACK,QAAQ,EAAC,IAAI;QAAAF,QAAA,EAC1BT;MAAe;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACPlC,OAAA,CAACP,IAAI;QAACgC,EAAE,EAAC,MAAM;QAACK,QAAQ,EAAC,IAAI;QAAAF,QAAA,EAC1BzB,eAAe,CAACgC;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1B,EAAA,CA5CeF,WAAW;EAAA,QAGRX,OAAO,EACGC,qBAAqB;AAAA;AAAAwC,EAAA,GAJlC9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}